{"version":3,"sources":["components/MainContainer/MainContainer.jsx","hooks/useLocalStorage.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["MainContainer","children","className","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","name","setName","number","setNumber","contact","setContact","handleChange","event","target","value","nameInputId","uuidv4","numberInputId","resetForm","s","autoComplete","e","preventDefault","id","htmlFor","ContactInput","type","onChange","pattern","title","required","ContactBtn","Filter","FilterLabel","FilterInput","ContactList","contacts","onDeleteContact","length","ContactItem","map","ContactName","ContactListNumber","onClick","App","setContacts","filter","setFilter","data","currentTarget","normalizedFilter","toLowerCase","includes","contactId","prevState","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.abe56e32.chunk.js","sourcesContent":["export const MainContainer = ({ children }) => {\r\n  return (\r\n    <div className=\"mainContainer\">{children}</div>\r\n  )\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport function ContactForm ({onSubmit}) {\r\n  \r\n  const [name, setName] = useLocalStorage('name', '');\r\n  const [number, setNumber] = useLocalStorage('number', '');\r\n  const [contact, setContact] = useState({})\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setContact({id: uuidv4(), name: name, number: number})\r\n    onSubmit(contact);\r\n    resetForm();\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <form className={s.ContactForm} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Name</label>\r\n      <input\r\n        className={s.ContactInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n        \r\n      <label htmlFor={numberInputId}>Phone number</label>\r\n      <input\r\n        className={s.ContactInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.ContactBtn}\r\n        type=\"submit\"\r\n        name=\"submit\">Add Contact\r\n      </button>\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <label className={s.FilterLabel}>\r\n    Find contacts by name\r\n    <input className={s.FilterInput} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\n","import React from 'react';\r\nimport s from './ContactList.module.css'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    contacts.length === 0 ?\r\n      <p className={s.ContactItem}>There are no contacts yet</p>\r\n      : <ul className={s.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.ContactItem}>\r\n          <span className={s.ContactName}>{name} </span>\r\n          <span className={s.ContactListNumber}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={s.ContactBtn}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MainContainer } from \"../MainContainer/MainContainer\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport { Filter } from \"../Filter/Filter\";\nimport { ContactList } from \"../ContactList/ContactList\";\n\n\nexport function App() {\n  \n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('')\n\n  // const formSubmitHandler = data => {\n  //   useEffect(prevState => {\n  //     const found = prevState.contacts.find((contact) => contact.name === data.name)\n  //     if (!found) {\n  //       setContacts(data, ...prevState)\n  //       return {\n  //         ...prevState, contacts\n  //       }\n  //     } toast.warn(`${data.name} is already in contacts`);\n  //   }, [prevState])\n  // }\n\n  const formSubmitHandler = data => {\n    setContacts(state => state, data)\n  }\n  const findByName = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter((contact) => (contact.id !== contactId) ))\n  };\n\n    return (\n      <MainContainer>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={formSubmitHandler}/>\n          <Filter value={filter} onChange={findByName}/>\n          <ContactList\n            contacts={getVisibleContacts}\n          onDeleteContact={deleteContact} />\n        <ToastContainer autoClose={3000}/>\n      </MainContainer>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__tQ2Iz\",\"ContactItem\":\"ContactList_ContactItem__3i_Sp\",\"ContactBtn\":\"ContactList_ContactBtn__14EM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__26Ah0\",\"ContactInput\":\"ContactForm_ContactInput__3QF8a\",\"ContactBtn\":\"ContactForm_ContactBtn__2Jm5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLabel\":\"Filter_FilterLabel__1-1d4\",\"FilterInput\":\"Filter_FilterInput__5s_Wx\"};"],"sourceRoot":""}