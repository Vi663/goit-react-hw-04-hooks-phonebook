{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/MainContainer/MainContainer.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","MainContainer","children","className","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","resetForm","s","this","htmlFor","ContactInput","type","onChange","pattern","title","required","ContactBtn","Component","Filter","FilterLabel","FilterInput","ContactList","contacts","onDeleteContact","map","ContactItem","ContactName","ContactListNumber","onClick","App","filter","formSubmitHandler","data","prevState","find","contact","toast","warn","findByName","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","visibleContacts","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a0f6bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLabel\":\"Filter_FilterLabel__1-1d4\",\"FilterInput\":\"Filter_FilterInput__5s_Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__tQ2Iz\",\"ContactItem\":\"ContactList_ContactItem__3i_Sp\",\"ContactBtn\":\"ContactList_ContactBtn__14EM5\"};","export const MainContainer = ({ children }) => {\r\n  return (\r\n    <div className=\"mainContainer\">{children}</div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  \r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({id: uuidv4(), ...this.state});\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.ContactForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n          className={s.ContactInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          id={this.nameInputId}\r\n          onChange={this.handleChange}\r\n          key={this.state.id}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        \r\n        <label htmlFor={this.numberInputId}>Phone number</label>\r\n        <input\r\n          className={s.ContactInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          id={this.numberInputId}\r\n          onChange={this.handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button className={s.ContactBtn}\r\n          type=\"submit\"\r\n          name=\"submit\">Add Contact</button>\r\n      </form>\r\n      \r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <label className={s.FilterLabel}>\r\n    Find contacts by name\r\n    <input className={s.FilterInput} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\n","import React from 'react';\r\nimport s from './ContactList.module.css'\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.ContactItem}>\r\n        <span className={s.ContactName}>{name} </span>\r\n        <span className={s.ContactListNumber}>{number}</span>\r\n        <button\r\n          type=\"button\"\r\n          className={s.ContactBtn}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MainContainer } from \"../MainContainer/MainContainer\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport { Filter } from \"../Filter/Filter\";\nimport { ContactList } from \"../ContactList/ContactList\";\n\n\nexport class App extends Component {\n  \n  state = {\n    contacts: [],\n    filter: '',\n  }\n  formSubmitHandler = data => {\n    this.setState((prevState) => {\n      const found = prevState.contacts.find((contact) => contact.name === data.name);\n     \n      if (!found) {\n        return {\n          ...prevState,\n          contacts: [...prevState.contacts, data]\n        };\n      }\n      toast.warn(`${data.name} is already in contacts`);\n    });\n  }\n\n  findByName = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter((contact) => (contact.id !== contactId) ),\n    }));\n  };\n\n render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <MainContainer>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formSubmitHandler}/>\n          <Filter value={filter} onChange={this.findByName}/>\n          <ContactList\n            contacts={visibleContacts}\n          onDeleteContact={this.deleteContact} />\n        <ToastContainer autoClose={3000}/>\n      </MainContainer>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__26Ah0\",\"ContactInput\":\"ContactForm_ContactInput__3QF8a\",\"ContactBtn\":\"ContactForm_ContactBtn__2Jm5M\"};"],"sourceRoot":""}